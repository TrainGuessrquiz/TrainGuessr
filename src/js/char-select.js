let selectedAvatar = null;
let userRole = null;
let roomPassword = null;
let socket = null;

function initCharacterSelection() {
    const usernameDisplay = document.getElementById('username-display');
    const roleDisplay = document.getElementById('role-display');
    const passwordSection = document.getElementById('password-section');
    const passwordDisplay = document.getElementById('password-display');
    const passwordInputContainer = document.getElementById('password-input-container');
    const passwordCode = document.getElementById('password-code');
    const passwordInput = document.getElementById('password-input');
    const avatarOptions = document.querySelectorAll('.avatar-option');
    const enterRoomButton = document.getElementById('enterRoomButton');
    const backButton = document.getElementById('back-button');

    const username = localStorage.getItem('currentUsername');
    userRole = localStorage.getItem('multiplayerRole');
    

    if (!username || !userRole) {
        alert('„Çª„ÉÉ„Ç∑„Éß„É≥ÊÉÖÂ†±„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„ÄÇÊúÄÂàù„Åã„Çâ„ÇÑ„ÇäÁõ¥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ');
        window.location.href = 'start.html';
        return;
    }

    usernameDisplay.textContent = username;

    // Socket.IO client initialization
    socket = io();

    if (userRole === 'host') {
        roleDisplay.textContent = 'üëë „Éõ„Çπ„Éà';
        roomPassword = generateRoomPassword();
        passwordCode.textContent = roomPassword;
        passwordDisplay.style.display = 'block';
        passwordInputContainer.style.display = 'none';
        localStorage.setItem('roomPassword', roomPassword);
        enterRoomButton.textContent = '„É´„Éº„É†„Çí‰ΩúÊàê„Åó„Å¶ÂæÖÊ©üÁîªÈù¢„Å∏';
    } else {
        roleDisplay.textContent = 'üö™ „Ç≤„Çπ„Éà';
        passwordDisplay.style.display = 'none';
        passwordInputContainer.style.display = 'block';
        enterRoomButton.textContent = '„É´„Éº„É†„Å´ÂèÇÂä†„Åó„Å¶ÂæÖÊ©üÁîªÈù¢„Å∏';
        
        passwordInput.addEventListener('input', (e) => {
            e.target.value = e.target.value.replace(/[^0-9]/g, '');
            checkCanProceed();
        });
    }

    avatarOptions.forEach(option => {
        option.addEventListener('click', () => {
            avatarOptions.forEach(opt => opt.classList.remove('selected'));
            option.classList.add('selected');
            selectedAvatar = option.getAttribute('data-avatar');
            checkCanProceed();
        });
    });

    // Socket.IO event listeners
    socket.on('connect', () => {
        // Socket connected
    });

    socket.on('disconnect', () => {
        // Socket disconnected
    });

    socket.on('room-created', (data) => {
        localStorage.setItem('selectedAvatar', selectedAvatar);
        // „É´„Éº„É†ID„ÇílocalStorage„Å´‰øùÂ≠ò
        if (data && data.roomId) {
            localStorage.setItem('roomId', data.roomId);
        } else {
            // „Éë„Çπ„ÉØ„Éº„Éâ„Çí„É´„Éº„É†ID„Å®„Åó„Å¶‰ΩøÁî®
            localStorage.setItem('roomId', roomPassword);
        }
        window.location.href = 'waiting.html';
    });

    socket.on('room-joined', (data) => {
        localStorage.setItem('selectedAvatar', selectedAvatar);
        // „É´„Éº„É†ID„ÇílocalStorage„Å´‰øùÂ≠ò
        if (data && data.roomId) {
            localStorage.setItem('roomId', data.roomId);
        } else {
            // „Éë„Çπ„ÉØ„Éº„Éâ„Çí„É´„Éº„É†ID„Å®„Åó„Å¶‰ΩøÁî®
            const enteredPassword = passwordInput.value.trim();
            localStorage.setItem('roomId', enteredPassword);
        }
        window.location.href = 'waiting.html';
    });

    socket.on('room-not-found', () => {
        alert('ÊåáÂÆö„Åï„Çå„Åü„É´„Éº„É†„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„ÄÇ„Éë„Çπ„ÉØ„Éº„Éâ„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ');
        enterRoomButton.disabled = false;
        enterRoomButton.textContent = userRole === 'host' ? '„É´„Éº„É†„Çí‰ΩúÊàê„Åó„Å¶ÂæÖÊ©üÁîªÈù¢„Å∏' : '„É´„Éº„É†„Å´ÂèÇÂä†„Åó„Å¶ÂæÖÊ©üÁîªÈù¢„Å∏';
    });

    socket.on('room-full', () => {
        alert('„É´„Éº„É†„ÅåÊ∫ÄÂì°„Åß„Åô„ÄÇ');
        enterRoomButton.disabled = false;
        enterRoomButton.textContent = userRole === 'host' ? '„É´„Éº„É†„Çí‰ΩúÊàê„Åó„Å¶ÂæÖÊ©üÁîªÈù¢„Å∏' : '„É´„Éº„É†„Å´ÂèÇÂä†„Åó„Å¶ÂæÖÊ©üÁîªÈù¢„Å∏';
    });

    enterRoomButton.addEventListener('click', () => {
        if (!selectedAvatar) {
            alert('„Ç¢„Éê„Çø„Éº„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ');
            return;
        }

        if (userRole === 'guest') {
            const enteredPassword = passwordInput.value.trim();
            if (enteredPassword.length !== 4) {
                alert('4Ê°Å„ÅÆ„Éë„Çπ„ÉØ„Éº„Éâ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ');
                return;
            }
            localStorage.setItem('roomPassword', enteredPassword);
            roomPassword = enteredPassword;
        }

        enterRoomButton.disabled = true;
        enterRoomButton.textContent = userRole === 'host' ? '„É´„Éº„É†‰ΩúÊàê‰∏≠...' : 'ÂèÇÂä†‰∏≠...';

        const roomData = {
            username: username,
            avatar: selectedAvatar,
            password: roomPassword
        };

        if (userRole === 'host') {
            socket.emit('create-room', roomData);
        } else {
            socket.emit('join-room', roomData);
        }
    });

    backButton.addEventListener('click', () => {
        localStorage.removeItem('multiplayerRole');
        localStorage.removeItem('roomPassword');
        window.location.href = 'mode-select.html';
    });

    function checkCanProceed() {
        let canProceed = selectedAvatar !== null;
        
        if (userRole === 'guest') {
            const enteredPassword = passwordInput ? passwordInput.value.trim() : '';
            canProceed = canProceed && enteredPassword.length === 4;
        }
        
        enterRoomButton.disabled = !canProceed;
    }

    // ÂàùÊúüÁä∂ÊÖã„Çí„ÉÅ„Çß„ÉÉ„ÇØ
    checkCanProceed();

    function generateRoomPassword() {
        return Math.floor(1000 + Math.random() * 9000).toString();
    }
}

document.addEventListener('DOMContentLoaded', initCharacterSelection);